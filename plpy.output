Warnings:
---------
80 shift/reduce conflicts and 1 reduce/reduce conflict

Conflicts:
----------
Conflict in state 37 between rule 48 and token ADDOP resolved as shift.
Conflict in state 37 between rule 48 and token ASSIGNOP resolved as shift.
Conflict in state 37 between rule 48 and token POSTINC resolved as shift.
Conflict in state 37 between rule 48 and token POWOP resolved as shift.
Conflict in state 37 between rule 48 and token MATCHOP resolved as shift.
Conflict in state 37 between rule 48 and token POSTDEC resolved as shift.
Conflict in state 37 between rule 48 and token DOTDOT resolved as shift.
Conflict in state 37 between rule 48 and token MULOP resolved as shift.
Conflict in state 37 between rule 48 and token ANDAND resolved as shift.
Conflict in state 37 between rule 48 and token OROR resolved as shift.
Conflict in state 37 between rule 48 and token RELOP resolved as shift.
Conflict in state 37 between rule 48 and token EQOP resolved as shift.
Conflict in state 48 between rule 45 and token ',' resolved as shift.
Conflict in state 49 between rule 60 and token ADDOP resolved as reduce.
Conflict in state 49 between rule 60 and token ASSIGNOP resolved as reduce.
Conflict in state 49 between rule 60 and token POSTINC resolved as shift.
Conflict in state 49 between rule 60 and token POWOP resolved as shift.
Conflict in state 49 between rule 60 and token MATCHOP resolved as reduce.
Conflict in state 49 between rule 60 and token POSTDEC resolved as shift.
Conflict in state 49 between rule 60 and token DOTDOT resolved as reduce.
Conflict in state 49 between rule 60 and token MULOP resolved as reduce.
Conflict in state 49 between rule 60 and token ANDAND resolved as reduce.
Conflict in state 49 between rule 60 and token OROR resolved as reduce.
Conflict in state 49 between rule 60 and token RELOP resolved as reduce.
Conflict in state 49 between rule 60 and token EQOP resolved as reduce.
Conflict in state 65 between rule 106 and token ',' resolved as shift.
Conflict in state 68 between rule 62 and token ADDOP resolved as reduce.
Conflict in state 68 between rule 62 and token ASSIGNOP resolved as reduce.
Conflict in state 68 between rule 62 and token POSTINC resolved as shift.
Conflict in state 68 between rule 62 and token POWOP resolved as shift.
Conflict in state 68 between rule 62 and token MATCHOP resolved as reduce.
Conflict in state 68 between rule 62 and token POSTDEC resolved as shift.
Conflict in state 68 between rule 62 and token DOTDOT resolved as reduce.
Conflict in state 68 between rule 62 and token MULOP resolved as reduce.
Conflict in state 68 between rule 62 and token ANDAND resolved as reduce.
Conflict in state 68 between rule 62 and token OROR resolved as reduce.
Conflict in state 68 between rule 62 and token RELOP resolved as reduce.
Conflict in state 68 between rule 62 and token EQOP resolved as reduce.
Conflict in state 72 between rule 85 and token ',' resolved as shift.
Conflict in state 82 between rule 61 and token ADDOP resolved as reduce.
Conflict in state 82 between rule 61 and token ASSIGNOP resolved as reduce.
Conflict in state 82 between rule 61 and token POSTINC resolved as shift.
Conflict in state 82 between rule 61 and token POWOP resolved as shift.
Conflict in state 82 between rule 61 and token MATCHOP resolved as reduce.
Conflict in state 82 between rule 61 and token POSTDEC resolved as shift.
Conflict in state 82 between rule 61 and token DOTDOT resolved as reduce.
Conflict in state 82 between rule 61 and token MULOP resolved as reduce.
Conflict in state 82 between rule 61 and token ANDAND resolved as reduce.
Conflict in state 82 between rule 61 and token OROR resolved as reduce.
Conflict in state 82 between rule 61 and token RELOP resolved as reduce.
Conflict in state 82 between rule 61 and token EQOP resolved as reduce.
Conflict in state 105 between rule 88 and token ADDOP resolved as shift.
Conflict in state 105 between rule 88 and token ASSIGNOP resolved as reduce.
Conflict in state 105 between rule 88 and token POSTINC resolved as shift.
Conflict in state 105 between rule 88 and token POWOP resolved as shift.
Conflict in state 105 between rule 88 and token MATCHOP resolved as shift.
Conflict in state 105 between rule 88 and token POSTDEC resolved as shift.
Conflict in state 105 between rule 88 and token DOTDOT resolved as reduce.
Conflict in state 105 between rule 88 and token MULOP resolved as shift.
Conflict in state 105 between rule 88 and token ANDAND resolved as reduce.
Conflict in state 105 between rule 88 and token OROR resolved as reduce.
Conflict in state 105 between rule 88 and token RELOP resolved as reduce.
Conflict in state 105 between rule 88 and token EQOP resolved as reduce.
Conflict in state 115 between rule 94 and token ',' resolved as shift.
Conflict in state 135 between rule 50 and token ADDOP resolved as shift.
Conflict in state 135 between rule 50 and token ASSIGNOP resolved as shift.
Conflict in state 135 between rule 50 and token POSTINC resolved as shift.
Conflict in state 135 between rule 50 and token POWOP resolved as shift.
Conflict in state 135 between rule 50 and token MATCHOP resolved as shift.
Conflict in state 135 between rule 50 and token POSTDEC resolved as shift.
Conflict in state 135 between rule 50 and token DOTDOT resolved as shift.
Conflict in state 135 between rule 50 and token MULOP resolved as shift.
Conflict in state 135 between rule 50 and token ANDAND resolved as shift.
Conflict in state 135 between rule 50 and token OROR resolved as shift.
Conflict in state 135 between rule 50 and token RELOP resolved as shift.
Conflict in state 135 between rule 50 and token EQOP resolved as shift.
Conflict in state 136 between rule 51 and token ADDOP resolved as reduce.
Conflict in state 136 between rule 51 and token ASSIGNOP resolved as reduce.
Conflict in state 136 between rule 51 and token POSTINC resolved as shift.
Conflict in state 136 between rule 51 and token POWOP resolved as shift.
Conflict in state 136 between rule 51 and token MATCHOP resolved as reduce.
Conflict in state 136 between rule 51 and token POSTDEC resolved as shift.
Conflict in state 136 between rule 51 and token DOTDOT resolved as reduce.
Conflict in state 136 between rule 51 and token MULOP resolved as reduce.
Conflict in state 136 between rule 51 and token ANDAND resolved as reduce.
Conflict in state 136 between rule 51 and token OROR resolved as reduce.
Conflict in state 136 between rule 51 and token RELOP resolved as reduce.
Conflict in state 136 between rule 51 and token EQOP resolved as reduce.
Conflict in state 137 between rule 59 and token ADDOP resolved as reduce.
Conflict in state 137 between rule 59 and token ASSIGNOP resolved as reduce.
Conflict in state 137 between rule 59 and token POSTINC resolved as shift.
Conflict in state 137 between rule 59 and token POWOP resolved as shift.
Conflict in state 137 between rule 59 and token MATCHOP resolved as reduce.
Conflict in state 137 between rule 59 and token POSTDEC resolved as shift.
Conflict in state 137 between rule 59 and token DOTDOT resolved as reduce.
Conflict in state 137 between rule 59 and token MULOP resolved as reduce.
Conflict in state 137 between rule 59 and token ANDAND resolved as reduce.
Conflict in state 137 between rule 59 and token OROR resolved as reduce.
Conflict in state 137 between rule 59 and token RELOP resolved as reduce.
Conflict in state 137 between rule 59 and token EQOP resolved as reduce.
Conflict in state 138 between rule 57 and token ADDOP resolved as shift.
Conflict in state 138 between rule 57 and token ASSIGNOP resolved as reduce.
Conflict in state 138 between rule 57 and token POSTINC resolved as shift.
Conflict in state 138 between rule 57 and token POWOP resolved as shift.
Conflict in state 138 between rule 57 and token MATCHOP resolved as shift.
Conflict in state 138 between rule 57 and token POSTDEC resolved as shift.
Conflict in state 138 between rule 57 and token DOTDOT resolved as reduce.
Conflict in state 138 between rule 57 and token MULOP resolved as shift.
Conflict in state 138 between rule 57 and token ANDAND resolved as reduce.
Conflict in state 138 between rule 57 and token OROR resolved as reduce.
Conflict in state 138 between rule 57 and token RELOP resolved as shift.
Conflict in state 138 between rule 57 and token EQOP resolved as shift.
Conflict in state 139 between rule 55 and token ADDOP resolved as shift.
Conflict in state 139 between rule 55 and token ASSIGNOP resolved as reduce.
Conflict in state 139 between rule 55 and token POSTINC resolved as shift.
Conflict in state 139 between rule 55 and token POWOP resolved as shift.
Conflict in state 139 between rule 55 and token MATCHOP resolved as shift.
Conflict in state 139 between rule 55 and token POSTDEC resolved as shift.
Conflict in state 139 between rule 55 and token DOTDOT resolved as reduce.
Conflict in state 139 between rule 55 and token MULOP resolved as shift.
Conflict in state 139 between rule 55 and token ANDAND resolved as reduce.
Conflict in state 139 between rule 55 and token OROR resolved as reduce.
Conflict in state 139 between rule 55 and token RELOP resolved as shift.
Conflict in state 139 between rule 55 and token EQOP resolved as error.
Conflict in state 140 between rule 54 and token ADDOP resolved as shift.
Conflict in state 140 between rule 54 and token ASSIGNOP resolved as reduce.
Conflict in state 140 between rule 54 and token POSTINC resolved as shift.
Conflict in state 140 between rule 54 and token POWOP resolved as shift.
Conflict in state 140 between rule 54 and token MATCHOP resolved as shift.
Conflict in state 140 between rule 54 and token POSTDEC resolved as shift.
Conflict in state 140 between rule 54 and token DOTDOT resolved as reduce.
Conflict in state 140 between rule 54 and token MULOP resolved as shift.
Conflict in state 140 between rule 54 and token ANDAND resolved as reduce.
Conflict in state 140 between rule 54 and token OROR resolved as reduce.
Conflict in state 140 between rule 54 and token RELOP resolved as error.
Conflict in state 140 between rule 54 and token EQOP resolved as reduce.
Conflict in state 141 between rule 53 and token ADDOP resolved as reduce.
Conflict in state 141 between rule 53 and token ASSIGNOP resolved as reduce.
Conflict in state 141 between rule 53 and token POSTINC resolved as shift.
Conflict in state 141 between rule 53 and token POWOP resolved as shift.
Conflict in state 141 between rule 53 and token MATCHOP resolved as shift.
Conflict in state 141 between rule 53 and token POSTDEC resolved as shift.
Conflict in state 141 between rule 53 and token DOTDOT resolved as reduce.
Conflict in state 141 between rule 53 and token MULOP resolved as shift.
Conflict in state 141 between rule 53 and token ANDAND resolved as reduce.
Conflict in state 141 between rule 53 and token OROR resolved as reduce.
Conflict in state 141 between rule 53 and token RELOP resolved as reduce.
Conflict in state 141 between rule 53 and token EQOP resolved as reduce.
Conflict in state 142 between rule 56 and token ADDOP resolved as shift.
Conflict in state 142 between rule 56 and token ASSIGNOP resolved as reduce.
Conflict in state 142 between rule 56 and token POSTINC resolved as shift.
Conflict in state 142 between rule 56 and token POWOP resolved as shift.
Conflict in state 142 between rule 56 and token MATCHOP resolved as shift.
Conflict in state 142 between rule 56 and token POSTDEC resolved as shift.
Conflict in state 142 between rule 56 and token DOTDOT resolved as error.
Conflict in state 142 between rule 56 and token MULOP resolved as shift.
Conflict in state 142 between rule 56 and token ANDAND resolved as shift.
Conflict in state 142 between rule 56 and token OROR resolved as shift.
Conflict in state 142 between rule 56 and token RELOP resolved as shift.
Conflict in state 142 between rule 56 and token EQOP resolved as shift.
Conflict in state 143 between rule 52 and token ADDOP resolved as reduce.
Conflict in state 143 between rule 52 and token ASSIGNOP resolved as reduce.
Conflict in state 143 between rule 52 and token POSTINC resolved as shift.
Conflict in state 143 between rule 52 and token POWOP resolved as shift.
Conflict in state 143 between rule 52 and token MATCHOP resolved as shift.
Conflict in state 143 between rule 52 and token POSTDEC resolved as shift.
Conflict in state 143 between rule 52 and token DOTDOT resolved as reduce.
Conflict in state 143 between rule 52 and token MULOP resolved as reduce.
Conflict in state 143 between rule 52 and token ANDAND resolved as reduce.
Conflict in state 143 between rule 52 and token OROR resolved as reduce.
Conflict in state 143 between rule 52 and token RELOP resolved as reduce.
Conflict in state 143 between rule 52 and token EQOP resolved as reduce.
Conflict in state 144 between rule 58 and token ADDOP resolved as shift.
Conflict in state 144 between rule 58 and token ASSIGNOP resolved as reduce.
Conflict in state 144 between rule 58 and token POSTINC resolved as shift.
Conflict in state 144 between rule 58 and token POWOP resolved as shift.
Conflict in state 144 between rule 58 and token MATCHOP resolved as shift.
Conflict in state 144 between rule 58 and token POSTDEC resolved as shift.
Conflict in state 144 between rule 58 and token DOTDOT resolved as reduce.
Conflict in state 144 between rule 58 and token MULOP resolved as shift.
Conflict in state 144 between rule 58 and token ANDAND resolved as shift.
Conflict in state 144 between rule 58 and token OROR resolved as reduce.
Conflict in state 144 between rule 58 and token RELOP resolved as shift.
Conflict in state 144 between rule 58 and token EQOP resolved as shift.
Conflict in state 145 between rule 43 and token OROP resolved as reduce.
Conflict in state 145 between rule 43 and token ANDOP resolved as reduce.
Conflict in state 147 between rule 44 and token OROP resolved as reduce.
Conflict in state 147 between rule 44 and token ANDOP resolved as shift.
Conflict in state 153 between rule 47 and token ADDOP resolved as shift.
Conflict in state 153 between rule 47 and token ASSIGNOP resolved as shift.
Conflict in state 153 between rule 47 and token POSTINC resolved as shift.
Conflict in state 153 between rule 47 and token POWOP resolved as shift.
Conflict in state 153 between rule 47 and token MATCHOP resolved as shift.
Conflict in state 153 between rule 47 and token POSTDEC resolved as shift.
Conflict in state 153 between rule 47 and token DOTDOT resolved as shift.
Conflict in state 153 between rule 47 and token MULOP resolved as shift.
Conflict in state 153 between rule 47 and token ANDAND resolved as shift.
Conflict in state 153 between rule 47 and token OROR resolved as shift.
Conflict in state 153 between rule 47 and token RELOP resolved as shift.
Conflict in state 153 between rule 47 and token EQOP resolved as shift.
State 2 contains 26 shift/reduce conflicts and 1 reduce/reduce conflict
State 151 contains 27 shift/reduce conflicts
State 213 contains 27 shift/reduce conflicts

Rules:
------
0:	$start -> prog $end
1:	prog -> lineseq
2:	block -> '{' remember lineseq '}'
3:	remember -> /* empty */
4:	mblock -> '{' mremember lineseq '}'
5:	mremember -> /* empty */
6:	lineseq -> /* empty */
7:	lineseq -> lineseq decl
8:	lineseq -> lineseq line
9:	line -> cond
10:	line -> loop
11:	line -> sideff ';'
12:	sideff -> error
13:	sideff -> expr
14:	sideff -> expr IF expr
15:	sideff -> expr WHILE expr
16:	sideff -> expr FOR expr
17:	else -> /* empty */
18:	else -> ELSE mblock
19:	else -> ELSIF '(' mexpr ')' mblock else
20:	cond -> IF '(' remember mexpr ')' mblock else
21:	cont -> /* empty */
22:	cont -> CONTINUE block
23:	loop -> WHILE '(' remember mtexpr ')' mblock cont
24:	loop -> FOR MY remember my_scalar '(' mexpr ')' mblock cont
25:	loop -> FOR scalar '(' remember mexpr ')' mblock cont
26:	loop -> FOR '(' remember mexpr ')' mblock cont
27:	loop -> FOR '(' remember mnexpr ';' mtexpr ';' mnexpr ')' mblock
28:	loop -> block cont
29:	nexpr -> /* empty */
30:	nexpr -> sideff
31:	texpr -> /* empty */
32:	texpr -> expr
33:	mexpr -> expr
34:	mnexpr -> nexpr
35:	mtexpr -> texpr
36:	decl -> /* empty */
37:	decl -> subrout
38:	subrout -> SUB startsub subname subbody
39:	startsub -> /* empty */
40:	subname -> WORD
41:	subbody -> block
42:	subbody -> ';'
43:	expr -> expr ANDOP expr
44:	expr -> expr OROP expr
45:	expr -> argexpr
46:	argexpr -> argexpr ','
47:	argexpr -> argexpr ',' term
48:	argexpr -> term
49:	subscripted -> scalar '[' expr ']'
50:	termbinop -> term ASSIGNOP term
51:	termbinop -> term POWOP term
52:	termbinop -> term MULOP term
53:	termbinop -> term ADDOP term
54:	termbinop -> term RELOP term
55:	termbinop -> term EQOP term
56:	termbinop -> term DOTDOT term
57:	termbinop -> term ANDAND term
58:	termbinop -> term OROR term
59:	termbinop -> term MATCHOP term
60:	termunop -> '-' term
61:	termunop -> '+' term
62:	termunop -> '!' term
63:	termunop -> term POSTINC
64:	termunop -> term POSTDEC
65:	term -> termbinop
66:	term -> termunop
67:	term -> STRING
68:	term -> myattrterm
69:	term -> '(' expr ')'
70:	term -> '(' ')'
71:	term -> scalar
72:	term -> hsh
73:	term -> ary
74:	term -> arylen
75:	term -> subscripted
76:	term -> '(' expr ')' '[' expr ']'
77:	term -> '(' ')' '[' expr ']'
78:	term -> ary '[' expr ']'
79:	term -> ary '{' expr ';' '}'
80:	term -> amper
81:	term -> amper '(' ')'
82:	term -> amper '(' expr ')'
83:	term -> NOAMP WORD listexpr
84:	term -> LOOPEX
85:	term -> NOTOP argexpr
86:	term -> UNIOP
87:	term -> UNIOP block
88:	term -> UNIOP term
89:	term -> FUNC1 '(' ')'
90:	term -> FUNC1 '(' expr ')'
91:	term -> PMFUNC '(' term ')'
92:	term -> PMFUNC '(' term ',' term ')'
93:	term -> WORD
94:	term -> LSTOP indirob argexpr
95:	term -> FUNC '(' indirob expr ')'
96:	term -> LSTOP listexpr
97:	term -> FUNC '(' listexprcom ')'
98:	myattrterm -> MY myterm myattrlist
99:	myattrterm -> MY myterm
100:	myterm -> '(' expr ')'
101:	myterm -> '(' ')'
102:	myterm -> scalar
103:	myterm -> hsh
104:	myterm -> ary
105:	listexpr -> /* empty */
106:	listexpr -> argexpr
107:	listexprcom -> /* empty */
108:	listexprcom -> expr
109:	listexprcom -> expr ','
110:	my_scalar -> scalar
111:	amper -> '&' indirob
112:	scalar -> '$' indirob
113:	ary -> '@' indirob
114:	hsh -> '%' indirob
115:	arylen -> DOLSHARP indirob
116:	indirob -> WORD
117:	indirob -> scalar
118:	indirob -> block

States:
-------
State 0:

	$start -> . prog $end	(Rule 0)

	$default	reduce using rule 6 (lineseq)

	prog	go to state 1
	lineseq	go to state 2

State 1:

	$start -> prog . $end	(Rule 0)

	$end	shift, and go to state 3

State 2:

	prog -> lineseq .	(Rule 1)
	lineseq -> lineseq . decl	(Rule 7)
	lineseq -> lineseq . line	(Rule 8)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	'{'	shift, and go to state 46
	DOLSHARP	shift, and go to state 35
	FOR	shift, and go to state 32
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	IF	shift, and go to state 16
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	SUB	shift, and go to state 24
	UNIOP	shift, and go to state 45
	WHILE	shift, and go to state 42
	WORD	shift, and go to state 4
	error	shift, and go to state 40

	 	[reduce using rule 36 (decl)]
	$end	reduce using rule 1 (prog)
	'!'	[reduce using rule 36 (decl)]
	'$'	[reduce using rule 36 (decl)]
	'%'	[reduce using rule 36 (decl)]
	'&'	[reduce using rule 36 (decl)]
	'('	[reduce using rule 36 (decl)]
	'+'	[reduce using rule 36 (decl)]
	'-'	[reduce using rule 36 (decl)]
	'@'	[reduce using rule 36 (decl)]
	'{'	[reduce using rule 36 (decl)]
	DOLSHARP	[reduce using rule 36 (decl)]
	FOR	[reduce using rule 36 (decl)]
	FUNC	[reduce using rule 36 (decl)]
	FUNC1	[reduce using rule 36 (decl)]
	IF	[reduce using rule 36 (decl)]
	LOOPEX	[reduce using rule 36 (decl)]
	LSTOP	[reduce using rule 36 (decl)]
	MY	[reduce using rule 36 (decl)]
	NOAMP	[reduce using rule 36 (decl)]
	NOTOP	[reduce using rule 36 (decl)]
	PMFUNC	[reduce using rule 36 (decl)]
	STRING	[reduce using rule 36 (decl)]
	SUB	[reduce using rule 36 (decl)]
	UNIOP	[reduce using rule 36 (decl)]
	WHILE	[reduce using rule 36 (decl)]
	WORD	[reduce using rule 36 (decl)]
	error	[reduce using rule 36 (decl)]

	scalar	go to state 6
	subrout	go to state 30
	sideff	go to state 31
	term	go to state 37
	loop	go to state 12
	ary	go to state 11
	expr	go to state 39
	decl	go to state 14
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19
	line	go to state 20
	cond	go to state 23
	arylen	go to state 43
	amper	go to state 25
	myattrterm	go to state 26
	subscripted	go to state 27
	block	go to state 47
	argexpr	go to state 48

State 3:

	$start -> prog $end .	(Rule 0)

	$default	accept

State 4:

	term -> WORD .	(Rule 93)

	$default	reduce using rule 93 (term)

State 5:

	termunop -> '-' . term	(Rule 60)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 49
	ary	go to state 11
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19

State 6:

	subscripted -> scalar . '[' expr ']'	(Rule 49)
	term -> scalar .	(Rule 71)

	'['	shift, and go to state 50

	$default	reduce using rule 71 (term)

State 7:

	ary -> '@' . indirob	(Rule 113)

	'$'	shift, and go to state 15
	'{'	shift, and go to state 46
	WORD	shift, and go to state 52

	scalar	go to state 51
	indirob	go to state 53
	block	go to state 54

State 8:

	hsh -> '%' . indirob	(Rule 114)

	'$'	shift, and go to state 15
	'{'	shift, and go to state 46
	WORD	shift, and go to state 52

	scalar	go to state 51
	indirob	go to state 55
	block	go to state 54

State 9:

	myattrterm -> MY . myterm myattrlist	(Rule 98)
	myattrterm -> MY . myterm	(Rule 99)

	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'('	shift, and go to state 59
	'@'	shift, and go to state 7

	scalar	go to state 56
	myterm	go to state 60
	hsh	go to state 58
	ary	go to state 57

State 10:

	term -> LSTOP . indirob argexpr	(Rule 94)
	term -> LSTOP . listexpr	(Rule 96)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	'{'	shift, and go to state 46
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 61

	$default	reduce using rule 105 (listexpr)

	scalar	go to state 62
	arylen	go to state 43
	indirob	go to state 63
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	termbinop	go to state 17
	block	go to state 54
	argexpr	go to state 65
	listexpr	go to state 64
	hsh	go to state 18
	termunop	go to state 19

State 11:

	term -> ary .	(Rule 73)
	term -> ary . '[' expr ']'	(Rule 78)
	term -> ary . '{' expr ';' '}'	(Rule 79)

	'['	shift, and go to state 66
	'{'	shift, and go to state 67

	$default	reduce using rule 73 (term)

State 12:

	line -> loop .	(Rule 10)

	$default	reduce using rule 10 (line)

State 13:

	termunop -> '!' . term	(Rule 62)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 68
	ary	go to state 11
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19

State 14:

	lineseq -> lineseq decl .	(Rule 7)

	$default	reduce using rule 7 (lineseq)

State 15:

	scalar -> '$' . indirob	(Rule 112)

	'$'	shift, and go to state 15
	'{'	shift, and go to state 46
	WORD	shift, and go to state 52

	scalar	go to state 51
	indirob	go to state 69
	block	go to state 54

State 16:

	cond -> IF . '(' remember mexpr ')' mblock else	(Rule 20)

	'('	shift, and go to state 70

State 17:

	term -> termbinop .	(Rule 65)

	$default	reduce using rule 65 (term)

State 18:

	term -> hsh .	(Rule 72)

	$default	reduce using rule 72 (term)

State 19:

	term -> termunop .	(Rule 66)

	$default	reduce using rule 66 (term)

State 20:

	lineseq -> lineseq line .	(Rule 8)

	$default	reduce using rule 8 (lineseq)

State 21:

	term -> PMFUNC . '(' term ')'	(Rule 91)
	term -> PMFUNC . '(' term ',' term ')'	(Rule 92)

	'('	shift, and go to state 71

State 22:

	term -> NOTOP . argexpr	(Rule 85)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	termbinop	go to state 17
	argexpr	go to state 72
	hsh	go to state 18
	termunop	go to state 19

State 23:

	line -> cond .	(Rule 9)

	$default	reduce using rule 9 (line)

State 24:

	subrout -> SUB . startsub subname subbody	(Rule 38)

	$default	reduce using rule 39 (startsub)

	startsub	go to state 73

State 25:

	term -> amper .	(Rule 80)
	term -> amper . '(' ')'	(Rule 81)
	term -> amper . '(' expr ')'	(Rule 82)

	'('	shift, and go to state 74

	$default	reduce using rule 80 (term)

State 26:

	term -> myattrterm .	(Rule 68)

	$default	reduce using rule 68 (term)

State 27:

	term -> subscripted .	(Rule 75)

	$default	reduce using rule 75 (term)

State 28:

	term -> '(' . expr ')'	(Rule 69)
	term -> '(' . ')'	(Rule 70)
	term -> '(' . expr ')' '[' expr ']'	(Rule 76)
	term -> '(' . ')' '[' expr ']'	(Rule 77)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	')'	shift, and go to state 76
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 75
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 29:

	term -> FUNC1 . '(' ')'	(Rule 89)
	term -> FUNC1 . '(' expr ')'	(Rule 90)

	'('	shift, and go to state 77

State 30:

	decl -> subrout .	(Rule 37)

	$default	reduce using rule 37 (decl)

State 31:

	line -> sideff . ';'	(Rule 11)

	';'	shift, and go to state 78

State 32:

	loop -> FOR . MY remember my_scalar '(' mexpr ')' mblock cont	(Rule 24)
	loop -> FOR . scalar '(' remember mexpr ')' mblock cont	(Rule 25)
	loop -> FOR . '(' remember mexpr ')' mblock cont	(Rule 26)
	loop -> FOR . '(' remember mnexpr ';' mtexpr ';' mnexpr ')' mblock	(Rule 27)

	'$'	shift, and go to state 15
	'('	shift, and go to state 81
	MY	shift, and go to state 80

	scalar	go to state 79

State 33:

	termunop -> '+' . term	(Rule 61)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 82
	ary	go to state 11
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19

State 34:

	term -> NOAMP . WORD listexpr	(Rule 83)

	WORD	shift, and go to state 83

State 35:

	arylen -> DOLSHARP . indirob	(Rule 115)

	'$'	shift, and go to state 15
	'{'	shift, and go to state 46
	WORD	shift, and go to state 52

	scalar	go to state 51
	indirob	go to state 84
	block	go to state 54

State 36:

	term -> FUNC . '(' indirob expr ')'	(Rule 95)
	term -> FUNC . '(' listexprcom ')'	(Rule 97)

	'('	shift, and go to state 85

State 37:

	argexpr -> term .	(Rule 48)
	termbinop -> term . ASSIGNOP term	(Rule 50)
	termbinop -> term . POWOP term	(Rule 51)
	termbinop -> term . MULOP term	(Rule 52)
	termbinop -> term . ADDOP term	(Rule 53)
	termbinop -> term . RELOP term	(Rule 54)
	termbinop -> term . EQOP term	(Rule 55)
	termbinop -> term . DOTDOT term	(Rule 56)
	termbinop -> term . ANDAND term	(Rule 57)
	termbinop -> term . OROR term	(Rule 58)
	termbinop -> term . MATCHOP term	(Rule 59)
	termunop -> term . POSTINC	(Rule 63)
	termunop -> term . POSTDEC	(Rule 64)

	ADDOP	shift, and go to state 92
	ANDAND	shift, and go to state 89
	ASSIGNOP	shift, and go to state 86
	DOTDOT	shift, and go to state 95
	EQOP	shift, and go to state 90
	MATCHOP	shift, and go to state 88
	MULOP	shift, and go to state 96
	OROR	shift, and go to state 97
	POSTDEC	shift, and go to state 94
	POSTINC	shift, and go to state 93
	POWOP	shift, and go to state 87
	RELOP	shift, and go to state 91

	$default	reduce using rule 48 (argexpr)

State 38:

	term -> STRING .	(Rule 67)

	$default	reduce using rule 67 (term)

State 39:

	sideff -> expr .	(Rule 13)
	sideff -> expr . IF expr	(Rule 14)
	sideff -> expr . WHILE expr	(Rule 15)
	sideff -> expr . FOR expr	(Rule 16)
	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)

	ANDOP	shift, and go to state 98
	FOR	shift, and go to state 101
	IF	shift, and go to state 99
	OROP	shift, and go to state 100
	WHILE	shift, and go to state 102

	$default	reduce using rule 13 (sideff)

State 40:

	sideff -> error .	(Rule 12)

	$default	reduce using rule 12 (sideff)

State 41:

	term -> LOOPEX .	(Rule 84)

	$default	reduce using rule 84 (term)

State 42:

	loop -> WHILE . '(' remember mtexpr ')' mblock cont	(Rule 23)

	'('	shift, and go to state 103

State 43:

	term -> arylen .	(Rule 74)

	$default	reduce using rule 74 (term)

State 44:

	amper -> '&' . indirob	(Rule 111)

	'$'	shift, and go to state 15
	'{'	shift, and go to state 46
	WORD	shift, and go to state 52

	scalar	go to state 51
	indirob	go to state 104
	block	go to state 54

State 45:

	term -> UNIOP .	(Rule 86)
	term -> UNIOP . block	(Rule 87)
	term -> UNIOP . term	(Rule 88)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	'{'	shift, and go to state 46
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	$default	reduce using rule 86 (term)

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 105
	ary	go to state 11
	termbinop	go to state 17
	block	go to state 106
	hsh	go to state 18
	termunop	go to state 19

State 46:

	block -> '{' . remember lineseq '}'	(Rule 2)

	$default	reduce using rule 3 (remember)

	remember	go to state 107

State 47:

	loop -> block . cont	(Rule 28)

	CONTINUE	shift, and go to state 108

	$default	reduce using rule 21 (cont)

	cont	go to state 109

State 48:

	expr -> argexpr .	(Rule 45)
	argexpr -> argexpr . ','	(Rule 46)
	argexpr -> argexpr . ',' term	(Rule 47)

	','	shift, and go to state 110

	$default	reduce using rule 45 (expr)

State 49:

	termbinop -> term . ASSIGNOP term	(Rule 50)
	termbinop -> term . POWOP term	(Rule 51)
	termbinop -> term . MULOP term	(Rule 52)
	termbinop -> term . ADDOP term	(Rule 53)
	termbinop -> term . RELOP term	(Rule 54)
	termbinop -> term . EQOP term	(Rule 55)
	termbinop -> term . DOTDOT term	(Rule 56)
	termbinop -> term . ANDAND term	(Rule 57)
	termbinop -> term . OROR term	(Rule 58)
	termbinop -> term . MATCHOP term	(Rule 59)
	termunop -> '-' term .	(Rule 60)
	termunop -> term . POSTINC	(Rule 63)
	termunop -> term . POSTDEC	(Rule 64)

	POSTDEC	shift, and go to state 94
	POSTINC	shift, and go to state 93
	POWOP	shift, and go to state 87

	$default	reduce using rule 60 (termunop)

State 50:

	subscripted -> scalar '[' . expr ']'	(Rule 49)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 111
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 51:

	indirob -> scalar .	(Rule 117)

	$default	reduce using rule 117 (indirob)

State 52:

	indirob -> WORD .	(Rule 116)

	$default	reduce using rule 116 (indirob)

State 53:

	ary -> '@' indirob .	(Rule 113)

	$default	reduce using rule 113 (ary)

State 54:

	indirob -> block .	(Rule 118)

	$default	reduce using rule 118 (indirob)

State 55:

	hsh -> '%' indirob .	(Rule 114)

	$default	reduce using rule 114 (hsh)

State 56:

	myterm -> scalar .	(Rule 102)

	$default	reduce using rule 102 (myterm)

State 57:

	myterm -> ary .	(Rule 104)

	$default	reduce using rule 104 (myterm)

State 58:

	myterm -> hsh .	(Rule 103)

	$default	reduce using rule 103 (myterm)

State 59:

	myterm -> '(' . expr ')'	(Rule 100)
	myterm -> '(' . ')'	(Rule 101)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	')'	shift, and go to state 113
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 112
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 60:

	myattrterm -> MY myterm . myattrlist	(Rule 98)
	myattrterm -> MY myterm .	(Rule 99)

	myattrlist	shift, and go to state 114

	$default	reduce using rule 99 (myattrterm)

State 61:

	term -> WORD .	(Rule 93)
	indirob -> WORD .	(Rule 116)

	'!'	reduce using rule 116 (indirob)
	'$'	reduce using rule 116 (indirob)
	'%'	reduce using rule 116 (indirob)
	'&'	reduce using rule 116 (indirob)
	'('	reduce using rule 116 (indirob)
	'+'	reduce using rule 116 (indirob)
	'-'	reduce using rule 116 (indirob)
	'@'	reduce using rule 116 (indirob)
	DOLSHARP	reduce using rule 116 (indirob)
	FUNC	reduce using rule 116 (indirob)
	FUNC1	reduce using rule 116 (indirob)
	LOOPEX	reduce using rule 116 (indirob)
	LSTOP	reduce using rule 116 (indirob)
	MY	reduce using rule 116 (indirob)
	NOAMP	reduce using rule 116 (indirob)
	NOTOP	reduce using rule 116 (indirob)
	PMFUNC	reduce using rule 116 (indirob)
	STRING	reduce using rule 116 (indirob)
	UNIOP	reduce using rule 116 (indirob)
	WORD	reduce using rule 116 (indirob)
	$default	reduce using rule 93 (term)

State 62:

	subscripted -> scalar . '[' expr ']'	(Rule 49)
	term -> scalar .	(Rule 71)
	indirob -> scalar .	(Rule 117)

	'['	shift, and go to state 50

	'!'	reduce using rule 117 (indirob)
	'$'	reduce using rule 117 (indirob)
	'%'	reduce using rule 117 (indirob)
	'&'	reduce using rule 117 (indirob)
	'('	reduce using rule 117 (indirob)
	'+'	reduce using rule 117 (indirob)
	'-'	reduce using rule 117 (indirob)
	'@'	reduce using rule 117 (indirob)
	DOLSHARP	reduce using rule 117 (indirob)
	FUNC	reduce using rule 117 (indirob)
	FUNC1	reduce using rule 117 (indirob)
	LOOPEX	reduce using rule 117 (indirob)
	LSTOP	reduce using rule 117 (indirob)
	MY	reduce using rule 117 (indirob)
	NOAMP	reduce using rule 117 (indirob)
	NOTOP	reduce using rule 117 (indirob)
	PMFUNC	reduce using rule 117 (indirob)
	STRING	reduce using rule 117 (indirob)
	UNIOP	reduce using rule 117 (indirob)
	WORD	reduce using rule 117 (indirob)
	$default	reduce using rule 71 (term)

State 63:

	term -> LSTOP indirob . argexpr	(Rule 94)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	termbinop	go to state 17
	argexpr	go to state 115
	hsh	go to state 18
	termunop	go to state 19

State 64:

	term -> LSTOP listexpr .	(Rule 96)

	$default	reduce using rule 96 (term)

State 65:

	argexpr -> argexpr . ','	(Rule 46)
	argexpr -> argexpr . ',' term	(Rule 47)
	listexpr -> argexpr .	(Rule 106)

	','	shift, and go to state 110

	$default	reduce using rule 106 (listexpr)

State 66:

	term -> ary '[' . expr ']'	(Rule 78)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 116
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 67:

	term -> ary '{' . expr ';' '}'	(Rule 79)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 117
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 68:

	termbinop -> term . ASSIGNOP term	(Rule 50)
	termbinop -> term . POWOP term	(Rule 51)
	termbinop -> term . MULOP term	(Rule 52)
	termbinop -> term . ADDOP term	(Rule 53)
	termbinop -> term . RELOP term	(Rule 54)
	termbinop -> term . EQOP term	(Rule 55)
	termbinop -> term . DOTDOT term	(Rule 56)
	termbinop -> term . ANDAND term	(Rule 57)
	termbinop -> term . OROR term	(Rule 58)
	termbinop -> term . MATCHOP term	(Rule 59)
	termunop -> '!' term .	(Rule 62)
	termunop -> term . POSTINC	(Rule 63)
	termunop -> term . POSTDEC	(Rule 64)

	POSTDEC	shift, and go to state 94
	POSTINC	shift, and go to state 93
	POWOP	shift, and go to state 87

	$default	reduce using rule 62 (termunop)

State 69:

	scalar -> '$' indirob .	(Rule 112)

	$default	reduce using rule 112 (scalar)

State 70:

	cond -> IF '(' . remember mexpr ')' mblock else	(Rule 20)

	$default	reduce using rule 3 (remember)

	remember	go to state 118

State 71:

	term -> PMFUNC '(' . term ')'	(Rule 91)
	term -> PMFUNC '(' . term ',' term ')'	(Rule 92)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 119
	ary	go to state 11
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19

State 72:

	argexpr -> argexpr . ','	(Rule 46)
	argexpr -> argexpr . ',' term	(Rule 47)
	term -> NOTOP argexpr .	(Rule 85)

	','	shift, and go to state 110

	$default	reduce using rule 85 (term)

State 73:

	subrout -> SUB startsub . subname subbody	(Rule 38)

	WORD	shift, and go to state 120

	subname	go to state 121

State 74:

	term -> amper '(' . ')'	(Rule 81)
	term -> amper '(' . expr ')'	(Rule 82)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	')'	shift, and go to state 123
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 122
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 75:

	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)
	term -> '(' expr . ')'	(Rule 69)
	term -> '(' expr . ')' '[' expr ']'	(Rule 76)

	')'	shift, and go to state 124
	ANDOP	shift, and go to state 98
	OROP	shift, and go to state 100

State 76:

	term -> '(' ')' .	(Rule 70)
	term -> '(' ')' . '[' expr ']'	(Rule 77)

	'['	shift, and go to state 125

	$default	reduce using rule 70 (term)

State 77:

	term -> FUNC1 '(' . ')'	(Rule 89)
	term -> FUNC1 '(' . expr ')'	(Rule 90)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	')'	shift, and go to state 127
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 126
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 78:

	line -> sideff ';' .	(Rule 11)

	$default	reduce using rule 11 (line)

State 79:

	loop -> FOR scalar . '(' remember mexpr ')' mblock cont	(Rule 25)

	'('	shift, and go to state 128

State 80:

	loop -> FOR MY . remember my_scalar '(' mexpr ')' mblock cont	(Rule 24)

	$default	reduce using rule 3 (remember)

	remember	go to state 129

State 81:

	loop -> FOR '(' . remember mexpr ')' mblock cont	(Rule 26)
	loop -> FOR '(' . remember mnexpr ';' mtexpr ';' mnexpr ')' mblock	(Rule 27)

	$default	reduce using rule 3 (remember)

	remember	go to state 130

State 82:

	termbinop -> term . ASSIGNOP term	(Rule 50)
	termbinop -> term . POWOP term	(Rule 51)
	termbinop -> term . MULOP term	(Rule 52)
	termbinop -> term . ADDOP term	(Rule 53)
	termbinop -> term . RELOP term	(Rule 54)
	termbinop -> term . EQOP term	(Rule 55)
	termbinop -> term . DOTDOT term	(Rule 56)
	termbinop -> term . ANDAND term	(Rule 57)
	termbinop -> term . OROR term	(Rule 58)
	termbinop -> term . MATCHOP term	(Rule 59)
	termunop -> '+' term .	(Rule 61)
	termunop -> term . POSTINC	(Rule 63)
	termunop -> term . POSTDEC	(Rule 64)

	POSTDEC	shift, and go to state 94
	POSTINC	shift, and go to state 93
	POWOP	shift, and go to state 87

	$default	reduce using rule 61 (termunop)

State 83:

	term -> NOAMP WORD . listexpr	(Rule 83)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	$default	reduce using rule 105 (listexpr)

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	termbinop	go to state 17
	argexpr	go to state 65
	listexpr	go to state 131
	hsh	go to state 18
	termunop	go to state 19

State 84:

	arylen -> DOLSHARP indirob .	(Rule 115)

	$default	reduce using rule 115 (arylen)

State 85:

	term -> FUNC '(' . indirob expr ')'	(Rule 95)
	term -> FUNC '(' . listexprcom ')'	(Rule 97)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	'{'	shift, and go to state 46
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 61

	$default	reduce using rule 107 (listexprcom)

	scalar	go to state 62
	arylen	go to state 43
	indirob	go to state 132
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 134
	termbinop	go to state 17
	listexprcom	go to state 133
	block	go to state 54
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 86:

	termbinop -> term ASSIGNOP . term	(Rule 50)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 135
	ary	go to state 11
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19

State 87:

	termbinop -> term POWOP . term	(Rule 51)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 136
	ary	go to state 11
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19

State 88:

	termbinop -> term MATCHOP . term	(Rule 59)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 137
	ary	go to state 11
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19

State 89:

	termbinop -> term ANDAND . term	(Rule 57)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 138
	ary	go to state 11
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19

State 90:

	termbinop -> term EQOP . term	(Rule 55)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 139
	ary	go to state 11
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19

State 91:

	termbinop -> term RELOP . term	(Rule 54)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 140
	ary	go to state 11
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19

State 92:

	termbinop -> term ADDOP . term	(Rule 53)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 141
	ary	go to state 11
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19

State 93:

	termunop -> term POSTINC .	(Rule 63)

	$default	reduce using rule 63 (termunop)

State 94:

	termunop -> term POSTDEC .	(Rule 64)

	$default	reduce using rule 64 (termunop)

State 95:

	termbinop -> term DOTDOT . term	(Rule 56)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 142
	ary	go to state 11
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19

State 96:

	termbinop -> term MULOP . term	(Rule 52)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 143
	ary	go to state 11
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19

State 97:

	termbinop -> term OROR . term	(Rule 58)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 144
	ary	go to state 11
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19

State 98:

	expr -> expr ANDOP . expr	(Rule 43)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 145
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 99:

	sideff -> expr IF . expr	(Rule 14)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 146
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 100:

	expr -> expr OROP . expr	(Rule 44)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 147
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 101:

	sideff -> expr FOR . expr	(Rule 16)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 148
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 102:

	sideff -> expr WHILE . expr	(Rule 15)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 149
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 103:

	loop -> WHILE '(' . remember mtexpr ')' mblock cont	(Rule 23)

	$default	reduce using rule 3 (remember)

	remember	go to state 150

State 104:

	amper -> '&' indirob .	(Rule 111)

	$default	reduce using rule 111 (amper)

State 105:

	termbinop -> term . ASSIGNOP term	(Rule 50)
	termbinop -> term . POWOP term	(Rule 51)
	termbinop -> term . MULOP term	(Rule 52)
	termbinop -> term . ADDOP term	(Rule 53)
	termbinop -> term . RELOP term	(Rule 54)
	termbinop -> term . EQOP term	(Rule 55)
	termbinop -> term . DOTDOT term	(Rule 56)
	termbinop -> term . ANDAND term	(Rule 57)
	termbinop -> term . OROR term	(Rule 58)
	termbinop -> term . MATCHOP term	(Rule 59)
	termunop -> term . POSTINC	(Rule 63)
	termunop -> term . POSTDEC	(Rule 64)
	term -> UNIOP term .	(Rule 88)

	ADDOP	shift, and go to state 92
	MATCHOP	shift, and go to state 88
	MULOP	shift, and go to state 96
	POSTDEC	shift, and go to state 94
	POSTINC	shift, and go to state 93
	POWOP	shift, and go to state 87

	$default	reduce using rule 88 (term)

State 106:

	term -> UNIOP block .	(Rule 87)

	$default	reduce using rule 87 (term)

State 107:

	block -> '{' remember . lineseq '}'	(Rule 2)

	$default	reduce using rule 6 (lineseq)

	lineseq	go to state 151

State 108:

	cont -> CONTINUE . block	(Rule 22)

	'{'	shift, and go to state 46

	block	go to state 152

State 109:

	loop -> block cont .	(Rule 28)

	$default	reduce using rule 28 (loop)

State 110:

	argexpr -> argexpr ',' .	(Rule 46)
	argexpr -> argexpr ',' . term	(Rule 47)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	$default	reduce using rule 46 (argexpr)

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 153
	ary	go to state 11
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19

State 111:

	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)
	subscripted -> scalar '[' expr . ']'	(Rule 49)

	']'	shift, and go to state 154
	ANDOP	shift, and go to state 98
	OROP	shift, and go to state 100

State 112:

	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)
	myterm -> '(' expr . ')'	(Rule 100)

	')'	shift, and go to state 155
	ANDOP	shift, and go to state 98
	OROP	shift, and go to state 100

State 113:

	myterm -> '(' ')' .	(Rule 101)

	$default	reduce using rule 101 (myterm)

State 114:

	myattrterm -> MY myterm myattrlist .	(Rule 98)

	$default	reduce using rule 98 (myattrterm)

State 115:

	argexpr -> argexpr . ','	(Rule 46)
	argexpr -> argexpr . ',' term	(Rule 47)
	term -> LSTOP indirob argexpr .	(Rule 94)

	','	shift, and go to state 110

	$default	reduce using rule 94 (term)

State 116:

	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)
	term -> ary '[' expr . ']'	(Rule 78)

	']'	shift, and go to state 156
	ANDOP	shift, and go to state 98
	OROP	shift, and go to state 100

State 117:

	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)
	term -> ary '{' expr . ';' '}'	(Rule 79)

	';'	shift, and go to state 157
	ANDOP	shift, and go to state 98
	OROP	shift, and go to state 100

State 118:

	cond -> IF '(' remember . mexpr ')' mblock else	(Rule 20)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	mexpr	go to state 158
	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 159
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 119:

	termbinop -> term . ASSIGNOP term	(Rule 50)
	termbinop -> term . POWOP term	(Rule 51)
	termbinop -> term . MULOP term	(Rule 52)
	termbinop -> term . ADDOP term	(Rule 53)
	termbinop -> term . RELOP term	(Rule 54)
	termbinop -> term . EQOP term	(Rule 55)
	termbinop -> term . DOTDOT term	(Rule 56)
	termbinop -> term . ANDAND term	(Rule 57)
	termbinop -> term . OROR term	(Rule 58)
	termbinop -> term . MATCHOP term	(Rule 59)
	termunop -> term . POSTINC	(Rule 63)
	termunop -> term . POSTDEC	(Rule 64)
	term -> PMFUNC '(' term . ')'	(Rule 91)
	term -> PMFUNC '(' term . ',' term ')'	(Rule 92)

	')'	shift, and go to state 161
	','	shift, and go to state 160
	ADDOP	shift, and go to state 92
	ANDAND	shift, and go to state 89
	ASSIGNOP	shift, and go to state 86
	DOTDOT	shift, and go to state 95
	EQOP	shift, and go to state 90
	MATCHOP	shift, and go to state 88
	MULOP	shift, and go to state 96
	OROR	shift, and go to state 97
	POSTDEC	shift, and go to state 94
	POSTINC	shift, and go to state 93
	POWOP	shift, and go to state 87
	RELOP	shift, and go to state 91

State 120:

	subname -> WORD .	(Rule 40)

	$default	reduce using rule 40 (subname)

State 121:

	subrout -> SUB startsub subname . subbody	(Rule 38)

	';'	shift, and go to state 163
	'{'	shift, and go to state 46

	block	go to state 164
	subbody	go to state 162

State 122:

	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)
	term -> amper '(' expr . ')'	(Rule 82)

	')'	shift, and go to state 165
	ANDOP	shift, and go to state 98
	OROP	shift, and go to state 100

State 123:

	term -> amper '(' ')' .	(Rule 81)

	$default	reduce using rule 81 (term)

State 124:

	term -> '(' expr ')' .	(Rule 69)
	term -> '(' expr ')' . '[' expr ']'	(Rule 76)

	'['	shift, and go to state 166

	$default	reduce using rule 69 (term)

State 125:

	term -> '(' ')' '[' . expr ']'	(Rule 77)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 167
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 126:

	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)
	term -> FUNC1 '(' expr . ')'	(Rule 90)

	')'	shift, and go to state 168
	ANDOP	shift, and go to state 98
	OROP	shift, and go to state 100

State 127:

	term -> FUNC1 '(' ')' .	(Rule 89)

	$default	reduce using rule 89 (term)

State 128:

	loop -> FOR scalar '(' . remember mexpr ')' mblock cont	(Rule 25)

	$default	reduce using rule 3 (remember)

	remember	go to state 169

State 129:

	loop -> FOR MY remember . my_scalar '(' mexpr ')' mblock cont	(Rule 24)

	'$'	shift, and go to state 15

	scalar	go to state 170
	my_scalar	go to state 171

State 130:

	loop -> FOR '(' remember . mexpr ')' mblock cont	(Rule 26)
	loop -> FOR '(' remember . mnexpr ';' mtexpr ';' mnexpr ')' mblock	(Rule 27)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4
	error	shift, and go to state 40

	';'	reduce using rule 29 (nexpr)

	mexpr	go to state 172
	scalar	go to state 6
	sideff	go to state 174
	term	go to state 37
	ary	go to state 11
	expr	go to state 175
	nexpr	go to state 176
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19
	arylen	go to state 43
	mnexpr	go to state 173
	amper	go to state 25
	myattrterm	go to state 26
	subscripted	go to state 27
	argexpr	go to state 48

State 131:

	term -> NOAMP WORD listexpr .	(Rule 83)

	$default	reduce using rule 83 (term)

State 132:

	term -> FUNC '(' indirob . expr ')'	(Rule 95)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 177
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 133:

	term -> FUNC '(' listexprcom . ')'	(Rule 97)

	')'	shift, and go to state 178

State 134:

	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)
	listexprcom -> expr .	(Rule 108)
	listexprcom -> expr . ','	(Rule 109)

	','	shift, and go to state 179
	ANDOP	shift, and go to state 98
	OROP	shift, and go to state 100

	$default	reduce using rule 108 (listexprcom)

State 135:

	termbinop -> term . ASSIGNOP term	(Rule 50)
	termbinop -> term ASSIGNOP term .	(Rule 50)
	termbinop -> term . POWOP term	(Rule 51)
	termbinop -> term . MULOP term	(Rule 52)
	termbinop -> term . ADDOP term	(Rule 53)
	termbinop -> term . RELOP term	(Rule 54)
	termbinop -> term . EQOP term	(Rule 55)
	termbinop -> term . DOTDOT term	(Rule 56)
	termbinop -> term . ANDAND term	(Rule 57)
	termbinop -> term . OROR term	(Rule 58)
	termbinop -> term . MATCHOP term	(Rule 59)
	termunop -> term . POSTINC	(Rule 63)
	termunop -> term . POSTDEC	(Rule 64)

	ADDOP	shift, and go to state 92
	ANDAND	shift, and go to state 89
	ASSIGNOP	shift, and go to state 86
	DOTDOT	shift, and go to state 95
	EQOP	shift, and go to state 90
	MATCHOP	shift, and go to state 88
	MULOP	shift, and go to state 96
	OROR	shift, and go to state 97
	POSTDEC	shift, and go to state 94
	POSTINC	shift, and go to state 93
	POWOP	shift, and go to state 87
	RELOP	shift, and go to state 91

	$default	reduce using rule 50 (termbinop)

State 136:

	termbinop -> term . ASSIGNOP term	(Rule 50)
	termbinop -> term . POWOP term	(Rule 51)
	termbinop -> term POWOP term .	(Rule 51)
	termbinop -> term . MULOP term	(Rule 52)
	termbinop -> term . ADDOP term	(Rule 53)
	termbinop -> term . RELOP term	(Rule 54)
	termbinop -> term . EQOP term	(Rule 55)
	termbinop -> term . DOTDOT term	(Rule 56)
	termbinop -> term . ANDAND term	(Rule 57)
	termbinop -> term . OROR term	(Rule 58)
	termbinop -> term . MATCHOP term	(Rule 59)
	termunop -> term . POSTINC	(Rule 63)
	termunop -> term . POSTDEC	(Rule 64)

	POSTDEC	shift, and go to state 94
	POSTINC	shift, and go to state 93
	POWOP	shift, and go to state 87

	$default	reduce using rule 51 (termbinop)

State 137:

	termbinop -> term . ASSIGNOP term	(Rule 50)
	termbinop -> term . POWOP term	(Rule 51)
	termbinop -> term . MULOP term	(Rule 52)
	termbinop -> term . ADDOP term	(Rule 53)
	termbinop -> term . RELOP term	(Rule 54)
	termbinop -> term . EQOP term	(Rule 55)
	termbinop -> term . DOTDOT term	(Rule 56)
	termbinop -> term . ANDAND term	(Rule 57)
	termbinop -> term . OROR term	(Rule 58)
	termbinop -> term . MATCHOP term	(Rule 59)
	termbinop -> term MATCHOP term .	(Rule 59)
	termunop -> term . POSTINC	(Rule 63)
	termunop -> term . POSTDEC	(Rule 64)

	POSTDEC	shift, and go to state 94
	POSTINC	shift, and go to state 93
	POWOP	shift, and go to state 87

	$default	reduce using rule 59 (termbinop)

State 138:

	termbinop -> term . ASSIGNOP term	(Rule 50)
	termbinop -> term . POWOP term	(Rule 51)
	termbinop -> term . MULOP term	(Rule 52)
	termbinop -> term . ADDOP term	(Rule 53)
	termbinop -> term . RELOP term	(Rule 54)
	termbinop -> term . EQOP term	(Rule 55)
	termbinop -> term . DOTDOT term	(Rule 56)
	termbinop -> term . ANDAND term	(Rule 57)
	termbinop -> term ANDAND term .	(Rule 57)
	termbinop -> term . OROR term	(Rule 58)
	termbinop -> term . MATCHOP term	(Rule 59)
	termunop -> term . POSTINC	(Rule 63)
	termunop -> term . POSTDEC	(Rule 64)

	ADDOP	shift, and go to state 92
	EQOP	shift, and go to state 90
	MATCHOP	shift, and go to state 88
	MULOP	shift, and go to state 96
	POSTDEC	shift, and go to state 94
	POSTINC	shift, and go to state 93
	POWOP	shift, and go to state 87
	RELOP	shift, and go to state 91

	$default	reduce using rule 57 (termbinop)

State 139:

	termbinop -> term . ASSIGNOP term	(Rule 50)
	termbinop -> term . POWOP term	(Rule 51)
	termbinop -> term . MULOP term	(Rule 52)
	termbinop -> term . ADDOP term	(Rule 53)
	termbinop -> term . RELOP term	(Rule 54)
	termbinop -> term . EQOP term	(Rule 55)
	termbinop -> term EQOP term .	(Rule 55)
	termbinop -> term . DOTDOT term	(Rule 56)
	termbinop -> term . ANDAND term	(Rule 57)
	termbinop -> term . OROR term	(Rule 58)
	termbinop -> term . MATCHOP term	(Rule 59)
	termunop -> term . POSTINC	(Rule 63)
	termunop -> term . POSTDEC	(Rule 64)

	ADDOP	shift, and go to state 92
	MATCHOP	shift, and go to state 88
	MULOP	shift, and go to state 96
	POSTDEC	shift, and go to state 94
	POSTINC	shift, and go to state 93
	POWOP	shift, and go to state 87
	RELOP	shift, and go to state 91

	EQOP	error (nonassociative)

	$default	reduce using rule 55 (termbinop)

State 140:

	termbinop -> term . ASSIGNOP term	(Rule 50)
	termbinop -> term . POWOP term	(Rule 51)
	termbinop -> term . MULOP term	(Rule 52)
	termbinop -> term . ADDOP term	(Rule 53)
	termbinop -> term . RELOP term	(Rule 54)
	termbinop -> term RELOP term .	(Rule 54)
	termbinop -> term . EQOP term	(Rule 55)
	termbinop -> term . DOTDOT term	(Rule 56)
	termbinop -> term . ANDAND term	(Rule 57)
	termbinop -> term . OROR term	(Rule 58)
	termbinop -> term . MATCHOP term	(Rule 59)
	termunop -> term . POSTINC	(Rule 63)
	termunop -> term . POSTDEC	(Rule 64)

	ADDOP	shift, and go to state 92
	MATCHOP	shift, and go to state 88
	MULOP	shift, and go to state 96
	POSTDEC	shift, and go to state 94
	POSTINC	shift, and go to state 93
	POWOP	shift, and go to state 87

	RELOP	error (nonassociative)

	$default	reduce using rule 54 (termbinop)

State 141:

	termbinop -> term . ASSIGNOP term	(Rule 50)
	termbinop -> term . POWOP term	(Rule 51)
	termbinop -> term . MULOP term	(Rule 52)
	termbinop -> term . ADDOP term	(Rule 53)
	termbinop -> term ADDOP term .	(Rule 53)
	termbinop -> term . RELOP term	(Rule 54)
	termbinop -> term . EQOP term	(Rule 55)
	termbinop -> term . DOTDOT term	(Rule 56)
	termbinop -> term . ANDAND term	(Rule 57)
	termbinop -> term . OROR term	(Rule 58)
	termbinop -> term . MATCHOP term	(Rule 59)
	termunop -> term . POSTINC	(Rule 63)
	termunop -> term . POSTDEC	(Rule 64)

	MATCHOP	shift, and go to state 88
	MULOP	shift, and go to state 96
	POSTDEC	shift, and go to state 94
	POSTINC	shift, and go to state 93
	POWOP	shift, and go to state 87

	$default	reduce using rule 53 (termbinop)

State 142:

	termbinop -> term . ASSIGNOP term	(Rule 50)
	termbinop -> term . POWOP term	(Rule 51)
	termbinop -> term . MULOP term	(Rule 52)
	termbinop -> term . ADDOP term	(Rule 53)
	termbinop -> term . RELOP term	(Rule 54)
	termbinop -> term . EQOP term	(Rule 55)
	termbinop -> term . DOTDOT term	(Rule 56)
	termbinop -> term DOTDOT term .	(Rule 56)
	termbinop -> term . ANDAND term	(Rule 57)
	termbinop -> term . OROR term	(Rule 58)
	termbinop -> term . MATCHOP term	(Rule 59)
	termunop -> term . POSTINC	(Rule 63)
	termunop -> term . POSTDEC	(Rule 64)

	ADDOP	shift, and go to state 92
	ANDAND	shift, and go to state 89
	EQOP	shift, and go to state 90
	MATCHOP	shift, and go to state 88
	MULOP	shift, and go to state 96
	OROR	shift, and go to state 97
	POSTDEC	shift, and go to state 94
	POSTINC	shift, and go to state 93
	POWOP	shift, and go to state 87
	RELOP	shift, and go to state 91

	DOTDOT	error (nonassociative)

	$default	reduce using rule 56 (termbinop)

State 143:

	termbinop -> term . ASSIGNOP term	(Rule 50)
	termbinop -> term . POWOP term	(Rule 51)
	termbinop -> term . MULOP term	(Rule 52)
	termbinop -> term MULOP term .	(Rule 52)
	termbinop -> term . ADDOP term	(Rule 53)
	termbinop -> term . RELOP term	(Rule 54)
	termbinop -> term . EQOP term	(Rule 55)
	termbinop -> term . DOTDOT term	(Rule 56)
	termbinop -> term . ANDAND term	(Rule 57)
	termbinop -> term . OROR term	(Rule 58)
	termbinop -> term . MATCHOP term	(Rule 59)
	termunop -> term . POSTINC	(Rule 63)
	termunop -> term . POSTDEC	(Rule 64)

	MATCHOP	shift, and go to state 88
	POSTDEC	shift, and go to state 94
	POSTINC	shift, and go to state 93
	POWOP	shift, and go to state 87

	$default	reduce using rule 52 (termbinop)

State 144:

	termbinop -> term . ASSIGNOP term	(Rule 50)
	termbinop -> term . POWOP term	(Rule 51)
	termbinop -> term . MULOP term	(Rule 52)
	termbinop -> term . ADDOP term	(Rule 53)
	termbinop -> term . RELOP term	(Rule 54)
	termbinop -> term . EQOP term	(Rule 55)
	termbinop -> term . DOTDOT term	(Rule 56)
	termbinop -> term . ANDAND term	(Rule 57)
	termbinop -> term . OROR term	(Rule 58)
	termbinop -> term OROR term .	(Rule 58)
	termbinop -> term . MATCHOP term	(Rule 59)
	termunop -> term . POSTINC	(Rule 63)
	termunop -> term . POSTDEC	(Rule 64)

	ADDOP	shift, and go to state 92
	ANDAND	shift, and go to state 89
	EQOP	shift, and go to state 90
	MATCHOP	shift, and go to state 88
	MULOP	shift, and go to state 96
	POSTDEC	shift, and go to state 94
	POSTINC	shift, and go to state 93
	POWOP	shift, and go to state 87
	RELOP	shift, and go to state 91

	$default	reduce using rule 58 (termbinop)

State 145:

	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr ANDOP expr .	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)

	$default	reduce using rule 43 (expr)

State 146:

	sideff -> expr IF expr .	(Rule 14)
	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)

	ANDOP	shift, and go to state 98
	OROP	shift, and go to state 100

	$default	reduce using rule 14 (sideff)

State 147:

	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)
	expr -> expr OROP expr .	(Rule 44)

	ANDOP	shift, and go to state 98

	$default	reduce using rule 44 (expr)

State 148:

	sideff -> expr FOR expr .	(Rule 16)
	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)

	ANDOP	shift, and go to state 98
	OROP	shift, and go to state 100

	$default	reduce using rule 16 (sideff)

State 149:

	sideff -> expr WHILE expr .	(Rule 15)
	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)

	ANDOP	shift, and go to state 98
	OROP	shift, and go to state 100

	$default	reduce using rule 15 (sideff)

State 150:

	loop -> WHILE '(' remember . mtexpr ')' mblock cont	(Rule 23)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	$default	reduce using rule 31 (texpr)

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 182
	texpr	go to state 180
	termbinop	go to state 17
	mtexpr	go to state 181
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 151:

	block -> '{' remember lineseq . '}'	(Rule 2)
	lineseq -> lineseq . decl	(Rule 7)
	lineseq -> lineseq . line	(Rule 8)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	'{'	shift, and go to state 46
	'}'	shift, and go to state 183
	DOLSHARP	shift, and go to state 35
	FOR	shift, and go to state 32
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	IF	shift, and go to state 16
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	SUB	shift, and go to state 24
	UNIOP	shift, and go to state 45
	WHILE	shift, and go to state 42
	WORD	shift, and go to state 4
	error	shift, and go to state 40

	'!'	[reduce using rule 36 (decl)]
	'$'	[reduce using rule 36 (decl)]
	'%'	[reduce using rule 36 (decl)]
	'&'	[reduce using rule 36 (decl)]
	'('	[reduce using rule 36 (decl)]
	'+'	[reduce using rule 36 (decl)]
	'-'	[reduce using rule 36 (decl)]
	'@'	[reduce using rule 36 (decl)]
	'{'	[reduce using rule 36 (decl)]
	'}'	[reduce using rule 36 (decl)]
	DOLSHARP	[reduce using rule 36 (decl)]
	FOR	[reduce using rule 36 (decl)]
	FUNC	[reduce using rule 36 (decl)]
	FUNC1	[reduce using rule 36 (decl)]
	IF	[reduce using rule 36 (decl)]
	LOOPEX	[reduce using rule 36 (decl)]
	LSTOP	[reduce using rule 36 (decl)]
	MY	[reduce using rule 36 (decl)]
	NOAMP	[reduce using rule 36 (decl)]
	NOTOP	[reduce using rule 36 (decl)]
	PMFUNC	[reduce using rule 36 (decl)]
	STRING	[reduce using rule 36 (decl)]
	SUB	[reduce using rule 36 (decl)]
	UNIOP	[reduce using rule 36 (decl)]
	WHILE	[reduce using rule 36 (decl)]
	WORD	[reduce using rule 36 (decl)]
	error	[reduce using rule 36 (decl)]

	scalar	go to state 6
	subrout	go to state 30
	sideff	go to state 31
	term	go to state 37
	loop	go to state 12
	ary	go to state 11
	expr	go to state 39
	decl	go to state 14
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19
	line	go to state 20
	cond	go to state 23
	arylen	go to state 43
	amper	go to state 25
	myattrterm	go to state 26
	subscripted	go to state 27
	block	go to state 47
	argexpr	go to state 48

State 152:

	cont -> CONTINUE block .	(Rule 22)

	$default	reduce using rule 22 (cont)

State 153:

	argexpr -> argexpr ',' term .	(Rule 47)
	termbinop -> term . ASSIGNOP term	(Rule 50)
	termbinop -> term . POWOP term	(Rule 51)
	termbinop -> term . MULOP term	(Rule 52)
	termbinop -> term . ADDOP term	(Rule 53)
	termbinop -> term . RELOP term	(Rule 54)
	termbinop -> term . EQOP term	(Rule 55)
	termbinop -> term . DOTDOT term	(Rule 56)
	termbinop -> term . ANDAND term	(Rule 57)
	termbinop -> term . OROR term	(Rule 58)
	termbinop -> term . MATCHOP term	(Rule 59)
	termunop -> term . POSTINC	(Rule 63)
	termunop -> term . POSTDEC	(Rule 64)

	ADDOP	shift, and go to state 92
	ANDAND	shift, and go to state 89
	ASSIGNOP	shift, and go to state 86
	DOTDOT	shift, and go to state 95
	EQOP	shift, and go to state 90
	MATCHOP	shift, and go to state 88
	MULOP	shift, and go to state 96
	OROR	shift, and go to state 97
	POSTDEC	shift, and go to state 94
	POSTINC	shift, and go to state 93
	POWOP	shift, and go to state 87
	RELOP	shift, and go to state 91

	$default	reduce using rule 47 (argexpr)

State 154:

	subscripted -> scalar '[' expr ']' .	(Rule 49)

	$default	reduce using rule 49 (subscripted)

State 155:

	myterm -> '(' expr ')' .	(Rule 100)

	$default	reduce using rule 100 (myterm)

State 156:

	term -> ary '[' expr ']' .	(Rule 78)

	$default	reduce using rule 78 (term)

State 157:

	term -> ary '{' expr ';' . '}'	(Rule 79)

	'}'	shift, and go to state 184

State 158:

	cond -> IF '(' remember mexpr . ')' mblock else	(Rule 20)

	')'	shift, and go to state 185

State 159:

	mexpr -> expr .	(Rule 33)
	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)

	ANDOP	shift, and go to state 98
	OROP	shift, and go to state 100

	$default	reduce using rule 33 (mexpr)

State 160:

	term -> PMFUNC '(' term ',' . term ')'	(Rule 92)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 186
	ary	go to state 11
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19

State 161:

	term -> PMFUNC '(' term ')' .	(Rule 91)

	$default	reduce using rule 91 (term)

State 162:

	subrout -> SUB startsub subname subbody .	(Rule 38)

	$default	reduce using rule 38 (subrout)

State 163:

	subbody -> ';' .	(Rule 42)

	$default	reduce using rule 42 (subbody)

State 164:

	subbody -> block .	(Rule 41)

	$default	reduce using rule 41 (subbody)

State 165:

	term -> amper '(' expr ')' .	(Rule 82)

	$default	reduce using rule 82 (term)

State 166:

	term -> '(' expr ')' '[' . expr ']'	(Rule 76)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 187
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 167:

	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)
	term -> '(' ')' '[' expr . ']'	(Rule 77)

	']'	shift, and go to state 188
	ANDOP	shift, and go to state 98
	OROP	shift, and go to state 100

State 168:

	term -> FUNC1 '(' expr ')' .	(Rule 90)

	$default	reduce using rule 90 (term)

State 169:

	loop -> FOR scalar '(' remember . mexpr ')' mblock cont	(Rule 25)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	mexpr	go to state 189
	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 159
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 170:

	my_scalar -> scalar .	(Rule 110)

	$default	reduce using rule 110 (my_scalar)

State 171:

	loop -> FOR MY remember my_scalar . '(' mexpr ')' mblock cont	(Rule 24)

	'('	shift, and go to state 190

State 172:

	loop -> FOR '(' remember mexpr . ')' mblock cont	(Rule 26)

	')'	shift, and go to state 191

State 173:

	loop -> FOR '(' remember mnexpr . ';' mtexpr ';' mnexpr ')' mblock	(Rule 27)

	';'	shift, and go to state 192

State 174:

	nexpr -> sideff .	(Rule 30)

	$default	reduce using rule 30 (nexpr)

State 175:

	sideff -> expr .	(Rule 13)
	sideff -> expr . IF expr	(Rule 14)
	sideff -> expr . WHILE expr	(Rule 15)
	sideff -> expr . FOR expr	(Rule 16)
	mexpr -> expr .	(Rule 33)
	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)

	ANDOP	shift, and go to state 98
	FOR	shift, and go to state 101
	IF	shift, and go to state 99
	OROP	shift, and go to state 100
	WHILE	shift, and go to state 102

	')'	reduce using rule 33 (mexpr)
	$default	reduce using rule 13 (sideff)

State 176:

	mnexpr -> nexpr .	(Rule 34)

	$default	reduce using rule 34 (mnexpr)

State 177:

	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)
	term -> FUNC '(' indirob expr . ')'	(Rule 95)

	')'	shift, and go to state 193
	ANDOP	shift, and go to state 98
	OROP	shift, and go to state 100

State 178:

	term -> FUNC '(' listexprcom ')' .	(Rule 97)

	$default	reduce using rule 97 (term)

State 179:

	listexprcom -> expr ',' .	(Rule 109)

	$default	reduce using rule 109 (listexprcom)

State 180:

	mtexpr -> texpr .	(Rule 35)

	$default	reduce using rule 35 (mtexpr)

State 181:

	loop -> WHILE '(' remember mtexpr . ')' mblock cont	(Rule 23)

	')'	shift, and go to state 194

State 182:

	texpr -> expr .	(Rule 32)
	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)

	ANDOP	shift, and go to state 98
	OROP	shift, and go to state 100

	$default	reduce using rule 32 (texpr)

State 183:

	block -> '{' remember lineseq '}' .	(Rule 2)

	$default	reduce using rule 2 (block)

State 184:

	term -> ary '{' expr ';' '}' .	(Rule 79)

	$default	reduce using rule 79 (term)

State 185:

	cond -> IF '(' remember mexpr ')' . mblock else	(Rule 20)

	'{'	shift, and go to state 195

	mblock	go to state 196

State 186:

	termbinop -> term . ASSIGNOP term	(Rule 50)
	termbinop -> term . POWOP term	(Rule 51)
	termbinop -> term . MULOP term	(Rule 52)
	termbinop -> term . ADDOP term	(Rule 53)
	termbinop -> term . RELOP term	(Rule 54)
	termbinop -> term . EQOP term	(Rule 55)
	termbinop -> term . DOTDOT term	(Rule 56)
	termbinop -> term . ANDAND term	(Rule 57)
	termbinop -> term . OROR term	(Rule 58)
	termbinop -> term . MATCHOP term	(Rule 59)
	termunop -> term . POSTINC	(Rule 63)
	termunop -> term . POSTDEC	(Rule 64)
	term -> PMFUNC '(' term ',' term . ')'	(Rule 92)

	')'	shift, and go to state 197
	ADDOP	shift, and go to state 92
	ANDAND	shift, and go to state 89
	ASSIGNOP	shift, and go to state 86
	DOTDOT	shift, and go to state 95
	EQOP	shift, and go to state 90
	MATCHOP	shift, and go to state 88
	MULOP	shift, and go to state 96
	OROR	shift, and go to state 97
	POSTDEC	shift, and go to state 94
	POSTINC	shift, and go to state 93
	POWOP	shift, and go to state 87
	RELOP	shift, and go to state 91

State 187:

	expr -> expr . ANDOP expr	(Rule 43)
	expr -> expr . OROP expr	(Rule 44)
	term -> '(' expr ')' '[' expr . ']'	(Rule 76)

	']'	shift, and go to state 198
	ANDOP	shift, and go to state 98
	OROP	shift, and go to state 100

State 188:

	term -> '(' ')' '[' expr ']' .	(Rule 77)

	$default	reduce using rule 77 (term)

State 189:

	loop -> FOR scalar '(' remember mexpr . ')' mblock cont	(Rule 25)

	')'	shift, and go to state 199

State 190:

	loop -> FOR MY remember my_scalar '(' . mexpr ')' mblock cont	(Rule 24)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	mexpr	go to state 200
	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 159
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 191:

	loop -> FOR '(' remember mexpr ')' . mblock cont	(Rule 26)

	'{'	shift, and go to state 195

	mblock	go to state 201

State 192:

	loop -> FOR '(' remember mnexpr ';' . mtexpr ';' mnexpr ')' mblock	(Rule 27)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	$default	reduce using rule 31 (texpr)

	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 182
	texpr	go to state 180
	termbinop	go to state 17
	mtexpr	go to state 202
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 193:

	term -> FUNC '(' indirob expr ')' .	(Rule 95)

	$default	reduce using rule 95 (term)

State 194:

	loop -> WHILE '(' remember mtexpr ')' . mblock cont	(Rule 23)

	'{'	shift, and go to state 195

	mblock	go to state 203

State 195:

	mblock -> '{' . mremember lineseq '}'	(Rule 4)

	$default	reduce using rule 5 (mremember)

	mremember	go to state 204

State 196:

	cond -> IF '(' remember mexpr ')' mblock . else	(Rule 20)

	ELSE	shift, and go to state 205
	ELSIF	shift, and go to state 207

	$default	reduce using rule 17 (else)

	else	go to state 206

State 197:

	term -> PMFUNC '(' term ',' term ')' .	(Rule 92)

	$default	reduce using rule 92 (term)

State 198:

	term -> '(' expr ')' '[' expr ']' .	(Rule 76)

	$default	reduce using rule 76 (term)

State 199:

	loop -> FOR scalar '(' remember mexpr ')' . mblock cont	(Rule 25)

	'{'	shift, and go to state 195

	mblock	go to state 208

State 200:

	loop -> FOR MY remember my_scalar '(' mexpr . ')' mblock cont	(Rule 24)

	')'	shift, and go to state 209

State 201:

	loop -> FOR '(' remember mexpr ')' mblock . cont	(Rule 26)

	CONTINUE	shift, and go to state 108

	$default	reduce using rule 21 (cont)

	cont	go to state 210

State 202:

	loop -> FOR '(' remember mnexpr ';' mtexpr . ';' mnexpr ')' mblock	(Rule 27)

	';'	shift, and go to state 211

State 203:

	loop -> WHILE '(' remember mtexpr ')' mblock . cont	(Rule 23)

	CONTINUE	shift, and go to state 108

	$default	reduce using rule 21 (cont)

	cont	go to state 212

State 204:

	mblock -> '{' mremember . lineseq '}'	(Rule 4)

	$default	reduce using rule 6 (lineseq)

	lineseq	go to state 213

State 205:

	else -> ELSE . mblock	(Rule 18)

	'{'	shift, and go to state 195

	mblock	go to state 214

State 206:

	cond -> IF '(' remember mexpr ')' mblock else .	(Rule 20)

	$default	reduce using rule 20 (cond)

State 207:

	else -> ELSIF . '(' mexpr ')' mblock else	(Rule 19)

	'('	shift, and go to state 215

State 208:

	loop -> FOR scalar '(' remember mexpr ')' mblock . cont	(Rule 25)

	CONTINUE	shift, and go to state 108

	$default	reduce using rule 21 (cont)

	cont	go to state 216

State 209:

	loop -> FOR MY remember my_scalar '(' mexpr ')' . mblock cont	(Rule 24)

	'{'	shift, and go to state 195

	mblock	go to state 217

State 210:

	loop -> FOR '(' remember mexpr ')' mblock cont .	(Rule 26)

	$default	reduce using rule 26 (loop)

State 211:

	loop -> FOR '(' remember mnexpr ';' mtexpr ';' . mnexpr ')' mblock	(Rule 27)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4
	error	shift, and go to state 40

	')'	reduce using rule 29 (nexpr)

	scalar	go to state 6
	arylen	go to state 43
	sideff	go to state 174
	mnexpr	go to state 218
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 39
	nexpr	go to state 176
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 212:

	loop -> WHILE '(' remember mtexpr ')' mblock cont .	(Rule 23)

	$default	reduce using rule 23 (loop)

State 213:

	mblock -> '{' mremember lineseq . '}'	(Rule 4)
	lineseq -> lineseq . decl	(Rule 7)
	lineseq -> lineseq . line	(Rule 8)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	'{'	shift, and go to state 46
	'}'	shift, and go to state 219
	DOLSHARP	shift, and go to state 35
	FOR	shift, and go to state 32
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	IF	shift, and go to state 16
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	SUB	shift, and go to state 24
	UNIOP	shift, and go to state 45
	WHILE	shift, and go to state 42
	WORD	shift, and go to state 4
	error	shift, and go to state 40

	'!'	[reduce using rule 36 (decl)]
	'$'	[reduce using rule 36 (decl)]
	'%'	[reduce using rule 36 (decl)]
	'&'	[reduce using rule 36 (decl)]
	'('	[reduce using rule 36 (decl)]
	'+'	[reduce using rule 36 (decl)]
	'-'	[reduce using rule 36 (decl)]
	'@'	[reduce using rule 36 (decl)]
	'{'	[reduce using rule 36 (decl)]
	'}'	[reduce using rule 36 (decl)]
	DOLSHARP	[reduce using rule 36 (decl)]
	FOR	[reduce using rule 36 (decl)]
	FUNC	[reduce using rule 36 (decl)]
	FUNC1	[reduce using rule 36 (decl)]
	IF	[reduce using rule 36 (decl)]
	LOOPEX	[reduce using rule 36 (decl)]
	LSTOP	[reduce using rule 36 (decl)]
	MY	[reduce using rule 36 (decl)]
	NOAMP	[reduce using rule 36 (decl)]
	NOTOP	[reduce using rule 36 (decl)]
	PMFUNC	[reduce using rule 36 (decl)]
	STRING	[reduce using rule 36 (decl)]
	SUB	[reduce using rule 36 (decl)]
	UNIOP	[reduce using rule 36 (decl)]
	WHILE	[reduce using rule 36 (decl)]
	WORD	[reduce using rule 36 (decl)]
	error	[reduce using rule 36 (decl)]

	scalar	go to state 6
	subrout	go to state 30
	sideff	go to state 31
	term	go to state 37
	loop	go to state 12
	ary	go to state 11
	expr	go to state 39
	decl	go to state 14
	termbinop	go to state 17
	hsh	go to state 18
	termunop	go to state 19
	line	go to state 20
	cond	go to state 23
	arylen	go to state 43
	amper	go to state 25
	myattrterm	go to state 26
	subscripted	go to state 27
	block	go to state 47
	argexpr	go to state 48

State 214:

	else -> ELSE mblock .	(Rule 18)

	$default	reduce using rule 18 (else)

State 215:

	else -> ELSIF '(' . mexpr ')' mblock else	(Rule 19)

	'!'	shift, and go to state 13
	'$'	shift, and go to state 15
	'%'	shift, and go to state 8
	'&'	shift, and go to state 44
	'('	shift, and go to state 28
	'+'	shift, and go to state 33
	'-'	shift, and go to state 5
	'@'	shift, and go to state 7
	DOLSHARP	shift, and go to state 35
	FUNC	shift, and go to state 36
	FUNC1	shift, and go to state 29
	LOOPEX	shift, and go to state 41
	LSTOP	shift, and go to state 10
	MY	shift, and go to state 9
	NOAMP	shift, and go to state 34
	NOTOP	shift, and go to state 22
	PMFUNC	shift, and go to state 21
	STRING	shift, and go to state 38
	UNIOP	shift, and go to state 45
	WORD	shift, and go to state 4

	mexpr	go to state 220
	scalar	go to state 6
	arylen	go to state 43
	myattrterm	go to state 26
	amper	go to state 25
	subscripted	go to state 27
	term	go to state 37
	ary	go to state 11
	expr	go to state 159
	termbinop	go to state 17
	argexpr	go to state 48
	hsh	go to state 18
	termunop	go to state 19

State 216:

	loop -> FOR scalar '(' remember mexpr ')' mblock cont .	(Rule 25)

	$default	reduce using rule 25 (loop)

State 217:

	loop -> FOR MY remember my_scalar '(' mexpr ')' mblock . cont	(Rule 24)

	CONTINUE	shift, and go to state 108

	$default	reduce using rule 21 (cont)

	cont	go to state 221

State 218:

	loop -> FOR '(' remember mnexpr ';' mtexpr ';' mnexpr . ')' mblock	(Rule 27)

	')'	shift, and go to state 222

State 219:

	mblock -> '{' mremember lineseq '}' .	(Rule 4)

	$default	reduce using rule 4 (mblock)

State 220:

	else -> ELSIF '(' mexpr . ')' mblock else	(Rule 19)

	')'	shift, and go to state 223

State 221:

	loop -> FOR MY remember my_scalar '(' mexpr ')' mblock cont .	(Rule 24)

	$default	reduce using rule 24 (loop)

State 222:

	loop -> FOR '(' remember mnexpr ';' mtexpr ';' mnexpr ')' . mblock	(Rule 27)

	'{'	shift, and go to state 195

	mblock	go to state 224

State 223:

	else -> ELSIF '(' mexpr ')' . mblock else	(Rule 19)

	'{'	shift, and go to state 195

	mblock	go to state 225

State 224:

	loop -> FOR '(' remember mnexpr ';' mtexpr ';' mnexpr ')' mblock .	(Rule 27)

	$default	reduce using rule 27 (loop)

State 225:

	else -> ELSIF '(' mexpr ')' mblock . else	(Rule 19)

	ELSE	shift, and go to state 205
	ELSIF	shift, and go to state 207

	$default	reduce using rule 17 (else)

	else	go to state 226

State 226:

	else -> ELSIF '(' mexpr ')' mblock else .	(Rule 19)

	$default	reduce using rule 19 (else)


Summary:
--------
Number of rules         : 119
Number of terminals     : 53
Number of non-terminals : 40
Number of states        : 227
